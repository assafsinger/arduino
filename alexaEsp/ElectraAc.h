#ifndef __ELECTRAAC_H__
#define __ELECTRAAC_H__

#include <Arduino.h> 
#include "IRremoteESP8266.h"
#include <IRsend.h>


//cool 24 low  (off)
uint16_t coolRawData[181] = {3064, 3934,  1944, 972,  972, 1972,  1880, 1006,  938, 1010,  966, 978,  968, 974,  968, 976,  968, 1006,  940, 1974,  1912, 974,  968, 1946,  1966, 956,  968, 974,  936, 1010,  936, 1006,  992, 992,  926, 976,  962, 982,  966, 978,  936, 1010,  972, 970,  986, 954,  940, 1008,  972, 1002,  938, 1016,  928, 1000,  940, 976,  968, 1948,  1974, 974,  2912, 3980,  1914, 1004,  938, 1982,  1966, 974,  910, 1010,  970, 1002,  940, 980,  970, 998,  964, 978,  940, 1974,  1880, 1006,  968, 1948,  1964, 956,  970, 1002,  940, 1004,  940, 1002,  940, 974,  970, 974,  966, 978,  968, 976,  966, 976,  968, 980,  968, 1004,  938, 1006,  938, 976,  970, 1002,  906, 1006,  938, 1010,  970, 1942,  1942, 974,  3006, 3952,  1942, 974,  940, 1944,  1944, 974,  1000, 974,  938, 974,  998, 978,  940, 1000,  940, 976,  964, 1948,  1912, 1010,  972, 1974,  1910, 1006,  938, 1014,  936, 996,  936, 978,  938, 1004,  938, 1006,  936, 1010,  968, 972,  936, 1006,  940, 1008,  972, 1002,  938, 972,  998, 976,  938, 976,  968, 972,  970, 974,  940, 1978,  1940, 1000,  3920};  // UNKNOWN 2C7B176D

//Heat 25 low (off)
uint16_t heatRawData[181] = {3130, 3928,  1930, 1928,  1910, 1006,  994, 954,  938, 1002,  1000, 972,  908, 1006,  940, 1004,  986, 960,  990, 1924,  1910, 1976,  1912, 1006,  998, 974,  908, 1006,  1000, 972,  908, 1006,  936, 1006,  936, 1008,  936, 1008,  1000, 974,  968, 976,  908, 1004,  1000, 974,  970, 972,  906, 1006,  938, 1006,  938, 1008,  1000, 972,  970, 1944,  1944, 972,  2912, 3982,  1912, 1976,  1910, 1008,  1000, 970,  908, 1008,  934, 1006,  940, 1004,  990, 958,  988, 954,  940, 1978,  1974, 1942,  1944, 972,  908, 1006,  998, 974,  958, 1010,  950, 972,  908, 1006,  998, 974,  970, 974,  970, 974,  908, 1006,  998, 974,  970, 972,  958, 958,  964, 974,  988, 956,  940, 1006,  1002, 972,  908, 1974,  1966, 956,  3006, 3948,  1942, 1946,  1944, 972,  960, 954,  988, 960,  938, 1004,  1002, 972,  970, 974,  968, 976,  908, 1976,  1974, 1942,  1880, 1006,  938, 1008,  938, 1004,  936, 1012,  936, 1006,  1000, 976,  968, 974,  970, 972,  910, 1004,  1000, 978,  970, 970,  908, 1008,  936, 1008,  936, 1012,  998, 974,  968, 976,  906, 1006,  998, 1948,  1942, 974,  3950};  // UNKNOWN 368E86FA


class ElectraAc{

public:
	ElectraAc(short);
	void toggleHeat(void); 
	void toggleCool(void); 
	void toggleLastState(void);

	
private:
	bool isHeat;
	bool isOn;
	IRsend* irsend = NULL;	
};

ElectraAc::ElectraAc(short pin){
	irsend = new IRsend(pin);
	isHeat = false;
	isOn = false;
}


void ElectraAc::toggleHeat(){
	irsend->sendRaw(heatRawData, 181, 38);
	isOn = !isOn;
	isHeat = true;
	
}

void ElectraAc::toggleCool(){
	irsend->sendRaw(coolRawData, 181, 38);
	isOn = !isOn;
	isHeat = false;
}

void ElectraAc::toggleLastState(){
	if(isHeat){
		this->toggleHeat();
	} else {
		this->toggleCool();
	}
}
	
bool isOn(){
	return isOn;
}

bool isHeat(){
	return isHeat;
}



#endif 

